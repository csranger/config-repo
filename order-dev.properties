### 应用/服务名
spring.application.name=order


### 配置 eureka 地址
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/


# 数据库相关配置
## 数据源 默认使用tomcat连接池
spring.datasource.url=jdbc:mysql://localhost:3306/takeaway?characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=csranger
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
## spring-jpa(类似于 mybatis)
## 方便调试 show-sql
spring.jpa.show-sql=true



# 负载均衡策略
## http://cloud.spring.io/spring-cloud-static/Finchley.SR1/single/spring-cloud.html#_customizing_the_default_for_all_ribbon_clients
### 默认规则 RoundRobinRule
#PRODUCT.ribbon.NIWSServerListClassName=com.netflix.loadbalancer.ConfigurationBasedServerList
#PRODUCT.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

env=dev

# 测试配置自动更新
data=world!

# rabbitmq 相关配置
## 连接到 rabbitmq-server
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
## 消费者数量，加快出队速度
spring.rabbitmq.listener.simple.concurrency=10
spring.rabbitmq.listener.simple.max-concurrency=10
# 链接从队列里取，每次取几个
spring.rabbitmq.listener.simple.prefetch=10
# 默认 listener 消费者自动启动
spring.rabbitmq.listener.simple.auto-startup=true
# 消费者消费失败后会重新将数据压入队列
spring.rabbitmq.listener.simple.default-requeue-rejected=true
# 队列满了，放不进去，启动重试
spring.rabbitmq.template.retry.enabled=true
# 1s 后重试一次
spring.rabbitmq.template.retry.initial-interval=1000ms
# 重试最大 3 次
spring.rabbitmq.template.retry.max-attempts=3
# 重试最大间隔 10s
spring.rabbitmq.template.retry.max-interval=10000ms
# 如果值为2，第一次等1s，第二次等2s，第三次等4s...
spring.rabbitmq.template.retry.multiplier=1




